name: CI

on: pull_request

jobs:
  ci:
    name: ${{ matrix.task.name }} (${{ matrix.os.name }})
    runs-on: ${{ matrix.os.name }}
    strategy:
      fail-fast: false
      matrix:
        os: 
          - name: ubuntu-22.04
            family: ubuntu
          - name: ubuntu-24.04
            family: ubuntu
          - name: macos-13-large
            family: darwin
          - name: macos-14-large
            family: darwin
          - name: macos-14-xlarge
            family: darwin-arm64
          - name: macos-15
            family: darwin-arm64
          - name: windows-2022
            family: windows
          - name: windows-2025
            family: windows
        task: 
        - name: Clippy
          command: |
            cargo hack clippy --each-feature --no-dev-deps -- -D warnings
            cargo clippy --tests --benches -- -D warnings
        - name: Test
          command: cargo test
        include:
          - os:
              family: ubuntu
            build_deps: scripts/workflows/provision-linux-build.sh
          - os:
              family: darwin
            build_deps: scripts/workflows/provision-darwin-build.sh
          - os:
              family: darwin-arm64
            build_deps: scripts/workflows/provision-darwin-arm64-build.sh
          - os:
              family: windows
            build_deps: scripts/workflows/provision-windows-build.ps1
          # formatting doesn't depend on build environment, not included in main matrix
          - task:
              name: Format
              command: cargo fmt -- --check
            os:
              name: ubuntu-latest
              family: ubuntu
    env:
      VCPKG_ROOT: 'C:\vcpkg'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
            ${{ env.VCPKG_ROOT }}
          key: ${{ matrix.os.name }}-cargo-${{ hashFiles('**/Cargo.lock', 'rust-toolchain.toml') }}-ci-1

      - name: Install dependencies
        run: ${{ matrix.build_deps }}

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack@0.6.11

      - name: ${{ matrix.task.name }}
        run: ${{ matrix.task.command }}
  
  aggregate:
    name: ci:required
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ci]
    steps:
      - name: check result
        if: ${{ needs.ci.result != 'success' }}
        run: exit 1
